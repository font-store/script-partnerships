<codestructure version="5.13">
<phptree>
<treenode node="AjaxView;PHP:Class Name;G:\wamp\sites\partnerships\src\View\AjaxView.php;f0;25;1;48;;;;vpos;;vAppView;;c;;r&#10;Definition&#10;    class AjaxView extends AppView&#10;&#10;Description&#10;     A view class that is used for AJAX responses. Currently only switches the default layout and sets the response type - which just maps to text/html by default.;;d0,26;;b0,0;;m">
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\View\AjaxView.php;f11;42;5;47;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize()&#10;&#10;Description&#10;     Initialization hook method.;;d4,43;;b1,0;;m">
</treenode>
</treenode>
<treenode node="AppController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\AppController.php;f0;27;1;71;;;;vpos;;vController;;c;;r&#10;Definition&#10;    class AppController extends Controller&#10;&#10;Description&#10;     Application Controller;;d0,28;;b0,0;;m">
<treenode node="beforeRender;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\AppController.php;f11;60;5;70;;;;vpos;;v;;r&#10;Definition&#10;    beforeRender(Event $event)&#10;&#10;Description&#10;     Before render callback.&#10;&#10;Parameters:&#10;    \Cake\Event\Event $event - The beforeRender event;;d4,61;;b1,0;;m\Cake\Event\Event $event;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\AppController.php;f11;39;5;52;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize()&#10;&#10;Description&#10;     Initialization hook method.;;d4,40;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Application;PHP:Class Name;G:\wamp\sites\partnerships\src\Application.php;f0;28;1;51;;;;vpos;;vBaseApplication;;c;;r&#10;Definition&#10;    class Application extends BaseApplication&#10;&#10;Description&#10;     Application setup class.;;d0,29;;b0,0;;m">
<treenode node="middleware;PHP:Function Name;G:\wamp\sites\partnerships\src\Application.php;f11;36;5;50;;;;vpos;;v;;r&#10;Definition&#10;    middleware($middlewareQueue)&#10;&#10;Description&#10;     Setup the middleware queue your application will use.&#10;&#10;Parameters:&#10;    \Cake\Http\MiddlewareQueue $middlewareQueue - The middleware queue to setup;;d4,37;;b1,0;;m\Cake\Http\MiddlewareQueue $middlewareQueue;;p">
</treenode>
</treenode>
<treenode node="AppView;PHP:Class Name;G:\wamp\sites\partnerships\src\View\AppView.php;f0;24;1;39;;;;vpos;;vView;;c;;r&#10;Definition&#10;    class AppView extends View&#10;&#10;Description&#10;     Application View;;d0,25;;b0,0;;m">
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\View\AppView.php;f11;36;5;38;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize()&#10;&#10;Description&#10;     Initialization hook method.;;d4,37;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Client;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Entity\Client.php;f0;16;1;35;;;;vpos;;vEntity;;c;;r&#10;Definition&#10;    class Client extends Entity&#10;&#10;Description&#10;     Client Entity;;d0,17;;b0,0;;m">
</treenode>
<treenode node="ClientsController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\Admin\ClientsController.php;f0;12;1;110;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class ClientsController extends AppController&#10;&#10;Description&#10;     Clients Controller;;d0,13;;b0,0;;m">
<treenode node="add;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\ClientsController.php;f11;50;5;64;;;;vpos;;v;;r&#10;Definition&#10;    add()&#10;&#10;Description&#10;     Add method;;d4,51;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\ClientsController.php;f11;98;5;109;;;;vpos;;v;;r&#10;Definition&#10;    delete($id = null)&#10;&#10;Description&#10;     Delete method&#10;&#10;Parameters:&#10;    string|null $id - Client id;;d4,99;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="edit;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\ClientsController.php;f11;73;5;89;;;;vpos;;v;;r&#10;Definition&#10;    edit($id = null)&#10;&#10;Description&#10;     Edit method&#10;&#10;Parameters:&#10;    string|null $id - Client id;;d4,74;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="index;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\ClientsController.php;f11;20;5;26;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Index method;;d4,21;;b1,0;;m">
</treenode>
<treenode node="view;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\ClientsController.php;f11;35;5;43;;;;vpos;;v;;r&#10;Definition&#10;    view($id = null)&#10;&#10;Description&#10;     View method&#10;&#10;Parameters:&#10;    string|null $id - Client id;;d4,36;;b1,0;;mstring|null $id;;p">
</treenode>
</treenode>
<treenode node="ClientsTable;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Table\ClientsTable.php;f0;21;1;87;;;;vpos;;vTable;;c;;r&#10;Definition&#10;    class ClientsTable extends Table&#10;&#10;Description&#10;     Clients Model;;d0,22;;b0,0;;m">
<treenode node="buildRules;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\ClientsTable.php;f11;81;5;86;;;;vpos;;v;;r&#10;Definition&#10;    buildRules(RulesChecker $rules)&#10;&#10;Description&#10;     Returns a rules checker object that will be used for validating application integrity.&#10;&#10;Parameters:&#10;    \Cake\ORM\RulesChecker $rules - The rules object to be modified;;d4,82;;b1,0;;m\Cake\ORM\RulesChecker $rules;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\ClientsTable.php;f11;30;5;41;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize(array $config)&#10;&#10;Description&#10;     Initialize method&#10;&#10;Parameters:&#10;    array $config - The configuration for the Table;;d4,31;;b1,0;;marray $config;;p">
</treenode>
<treenode node="validationDefault;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\ClientsTable.php;f11;49;5;72;;;;vpos;;v;;r&#10;Definition&#10;    validationDefault(Validator $validator)&#10;&#10;Description&#10;     Default validation rules.&#10;&#10;Parameters:&#10;    \Cake\Validation\Validator $validator - Validator instance;;d4,50;;b1,0;;m\Cake\Validation\Validator $validator;;p">
</treenode>
</treenode>
<treenode node="ConsoleShell;PHP:Class Name;G:\wamp\sites\partnerships\src\Shell\ConsoleShell.php;f0;24;1;80;;;;vpos;;vShell;;c;;r&#10;Definition&#10;    class ConsoleShell extends Shell&#10;&#10;Description&#10;     Simple console wrapper around Psy\Shell.;;d0,25;;b0,0;;m">
<treenode node="getOptionParser;PHP:Function Name;G:\wamp\sites\partnerships\src\Shell\ConsoleShell.php;f11;66;5;79;;;;vpos;;v;;r&#10;Definition&#10;    getOptionParser()&#10;&#10;Description&#10;     Display help for this console.;;d4,67;;b1,0;;m">
</treenode>
<treenode node="main;PHP:Function Name;G:\wamp\sites\partnerships\src\Shell\ConsoleShell.php;f11;32;5;59;;;;vpos;;vint;;r&#10;Definition&#10;    main()&#10;&#10;Description&#10;     Start the shell and interactive console.&#10;&#10;Return:&#10;   |null;;d4,33;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ErrorController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\ErrorController.php;f0;23;1;67;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class ErrorController extends AppController&#10;&#10;Description&#10;     Error Handling Controller;;d0,24;;b0,0;;m">
<treenode node="afterFilter;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\ErrorController.php;f11;64;5;66;;;;vpos;;v;;r&#10;Definition&#10;    afterFilter(Event $event)&#10;&#10;Description&#10;     afterFilter callback.&#10;&#10;Parameters:&#10;    \Cake\Event\Event $event - Event;;d4,65;;b1,0;;m\Cake\Event\Event $event;;p">
</treenode>
<treenode node="beforeFilter;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\ErrorController.php;f11;41;5;43;;;;vpos;;v;;r&#10;Definition&#10;    beforeFilter(Event $event)&#10;&#10;Description&#10;     beforeFilter callback.&#10;&#10;Parameters:&#10;    \Cake\Event\Event $event - Event;;d4,42;;b1,0;;m\Cake\Event\Event $event;;p">
</treenode>
<treenode node="beforeRender;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\ErrorController.php;f11;51;5;56;;;;vpos;;v;;r&#10;Definition&#10;    beforeRender(Event $event)&#10;&#10;Description&#10;     beforeRender callback.&#10;&#10;Parameters:&#10;    \Cake\Event\Event $event - Event;;d4,52;;b1,0;;m\Cake\Event\Event $event;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\ErrorController.php;f11;30;5;33;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize()&#10;&#10;Description&#10;     Initialization hook method.;;d4,31;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Font;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Entity\Font.php;f0;13;1;29;;;;vpos;;vEntity;;c;;r&#10;Definition&#10;    class Font extends Entity&#10;&#10;Description&#10;     Font Entity;;d0,14;;b0,0;;m">
</treenode>
<treenode node="FontsController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\Admin\FontsController.php;f0;12;1;110;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class FontsController extends AppController&#10;&#10;Description&#10;     Fonts Controller;;d0,13;;b0,0;;m">
<treenode node="add;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\FontsController.php;f11;50;5;64;;;;vpos;;v;;r&#10;Definition&#10;    add()&#10;&#10;Description&#10;     Add method;;d4,51;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\FontsController.php;f11;98;5;109;;;;vpos;;v;;r&#10;Definition&#10;    delete($id = null)&#10;&#10;Description&#10;     Delete method&#10;&#10;Parameters:&#10;    string|null $id - Font id;;d4,99;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="edit;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\FontsController.php;f11;73;5;89;;;;vpos;;v;;r&#10;Definition&#10;    edit($id = null)&#10;&#10;Description&#10;     Edit method&#10;&#10;Parameters:&#10;    string|null $id - Font id;;d4,74;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="index;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\FontsController.php;f11;20;5;26;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Index method;;d4,21;;b1,0;;m">
</treenode>
<treenode node="view;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\FontsController.php;f11;35;5;43;;;;vpos;;v;;r&#10;Definition&#10;    view($id = null)&#10;&#10;Description&#10;     View method&#10;&#10;Parameters:&#10;    string|null $id - Font id;;d4,36;;b1,0;;mstring|null $id;;p">
</treenode>
</treenode>
<treenode node="FontsTable;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Table\FontsTable.php;f0;21;1;61;;;;vpos;;vTable;;c;;r&#10;Definition&#10;    class FontsTable extends Table&#10;&#10;Description&#10;     Fonts Model;;d0,22;;b0,0;;m">
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\FontsTable.php;f11;30;5;41;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize(array $config)&#10;&#10;Description&#10;     Initialize method&#10;&#10;Parameters:&#10;    array $config - The configuration for the Table;;d4,31;;b1,0;;marray $config;;p">
</treenode>
<treenode node="validationDefault;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\FontsTable.php;f11;49;5;60;;;;vpos;;v;;r&#10;Definition&#10;    validationDefault(Validator $validator)&#10;&#10;Description&#10;     Default validation rules.&#10;&#10;Parameters:&#10;    \Cake\Validation\Validator $validator - Validator instance;;d4,50;;b1,0;;m\Cake\Validation\Validator $validator;;p">
</treenode>
</treenode>
<treenode node="Grant;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Entity\Grant.php;f0;21;1;45;;;;vpos;;vEntity;;c;;r&#10;Definition&#10;    class Grant extends Entity&#10;&#10;Description&#10;     Grant Entity;;d0,22;;b0,0;;m">
</treenode>
<treenode node="GrantsController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\Admin\GrantsController.php;f0;12;1;119;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class GrantsController extends AppController&#10;&#10;Description&#10;     Grants Controller;;d0,13;;b0,0;;m">
<treenode node="add;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\GrantsController.php;f11;53;5;70;;;;vpos;;v;;r&#10;Definition&#10;    add()&#10;&#10;Description&#10;     Add method;;d4,54;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\GrantsController.php;f11;107;5;118;;;;vpos;;v;;r&#10;Definition&#10;    delete($id = null)&#10;&#10;Description&#10;     Delete method&#10;&#10;Parameters:&#10;    string|null $id - Grant id;;d4,108;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="edit;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\GrantsController.php;f11;79;5;98;;;;vpos;;v;;r&#10;Definition&#10;    edit($id = null)&#10;&#10;Description&#10;     Edit method&#10;&#10;Parameters:&#10;    string|null $id - Grant id;;d4,80;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="index;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\GrantsController.php;f11;20;5;29;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Index method;;d4,21;;b1,0;;m">
</treenode>
<treenode node="view;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\GrantsController.php;f11;38;5;46;;;;vpos;;v;;r&#10;Definition&#10;    view($id = null)&#10;&#10;Description&#10;     View method&#10;&#10;Parameters:&#10;    string|null $id - Grant id;;d4,39;;b1,0;;mstring|null $id;;p">
</treenode>
</treenode>
<treenode node="GrantsTable;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Table\GrantsTable.php;f0;23;1;97;;;;vpos;;vTable;;c;;r&#10;Definition&#10;    class GrantsTable extends Table&#10;&#10;Description&#10;     Grants Model;;d0,24;;b0,0;;m">
<treenode node="buildRules;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\GrantsTable.php;f11;89;5;96;;;;vpos;;v;;r&#10;Definition&#10;    buildRules(RulesChecker $rules)&#10;&#10;Description&#10;     Returns a rules checker object that will be used for validating application integrity.&#10;&#10;Parameters:&#10;    \Cake\ORM\RulesChecker $rules - The rules object to be modified;;d4,90;;b1,0;;m\Cake\ORM\RulesChecker $rules;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\GrantsTable.php;f11;32;5;49;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize(array $config)&#10;&#10;Description&#10;     Initialize method&#10;&#10;Parameters:&#10;    array $config - The configuration for the Table;;d4,33;;b1,0;;marray $config;;p">
</treenode>
<treenode node="validationDefault;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\GrantsTable.php;f11;57;5;80;;;;vpos;;v;;r&#10;Definition&#10;    validationDefault(Validator $validator)&#10;&#10;Description&#10;     Default validation rules.&#10;&#10;Parameters:&#10;    \Cake\Validation\Validator $validator - Validator instance;;d4,58;;b1,0;;m\Cake\Validation\Validator $validator;;p">
</treenode>
</treenode>
<treenode node="Installer;PHP:Class Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f0;24;1;238;;;;vpos;;v;;r&#10;Definition&#10;    class Installer&#10;&#10;Description&#10;     Provides installation hooks for when this application is installed via composer. Customize this class to suit your needs.;;d0,25;;b0,0;;m">
<treenode node="createAppConfig;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;79;5;87;;;;vpos;;vvoid;;r&#10;Definition&#10;    createAppConfig($dir, $io)&#10;&#10;Description&#10;     Create the config/app.php file if it does not exist.&#10;&#10;Parameters:&#10;    string $dir - The application&apos;s root directory&#10;    \Composer\IO\IOInterface $io - IO interface to write to console;;d4,80;;b1,5;;mstring $dir;;p\Composer\IO\IOInterface $io;;p">
</treenode>
<treenode node="createWritableDirectories;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;96;5;116;;;;vpos;;vvoid;;r&#10;Definition&#10;    createWritableDirectories($dir, $io)&#10;&#10;Description&#10;     Create the `logs` and `tmp` directories.&#10;&#10;Parameters:&#10;    string $dir - The application&apos;s root directory&#10;    \Composer\IO\IOInterface $io - IO interface to write to console;;d4,97;;b1,5;;mstring $dir;;p\Composer\IO\IOInterface $io;;p">
</treenode>
<treenode node="postInstall;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;34;5;70;;;;vpos;;vvoid;;r&#10;Definition&#10;    postInstall(Event $event)&#10;&#10;Description&#10;     Does some routine installation tasks so people don&apos;t have to.&#10;&#10;Parameters:&#10;    \Composer\Script\Event $event - The composer event object;;d4,35;;b1,5;;m\Composer\Script\Event $event;;p">
</treenode>
<treenode node="setAppNameInFile;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;218;5;237;;;;vpos;;vvoid;;r&#10;Definition&#10;    setAppNameInFile($dir, $io, $appName, $file)&#10;&#10;Description&#10;     Set the APP_NAME value in a given file&#10;&#10;Parameters:&#10;    string $dir - The application&apos;s root directory&#10;    \Composer\IO\IOInterface $io - IO interface to write to console&#10;    string $appName - app name to set in the file&#10;    string $file - A path to a file relative to the application&apos;s root;;d4,219;;b1,5;;mstring $dir;;p\Composer\IO\IOInterface $io;;pstring $appName;;pstring $file;;p">
</treenode>
<treenode node="setFolderPermissions;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;127;5;163;;;;vpos;;vvoid;;r&#10;Definition&#10;    setFolderPermissions($dir, $io)&#10;&#10;Description&#10;     Set globally writable permissions on the &quot;tmp&quot; and &quot;logs&quot; directory.&#10;&#10;Parameters:&#10;    string $dir - The application&apos;s root directory&#10;    \Composer\IO\IOInterface $io - IO interface to write to console;;d4,128;;b1,5;;mstring $dir;;p\Composer\IO\IOInterface $io;;p">
</treenode>
<treenode node="setSecuritySalt;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;172;5;176;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSecuritySalt($dir, $io)&#10;&#10;Description&#10;     Set the security.salt value in the application&apos;s config file.&#10;&#10;Parameters:&#10;    string $dir - The application&apos;s root directory&#10;    \Composer\IO\IOInterface $io - IO interface to write to console;;d4,173;;b1,5;;mstring $dir;;p\Composer\IO\IOInterface $io;;p">
</treenode>
<treenode node="setSecuritySaltInFile;PHP:Function Name;G:\wamp\sites\partnerships\src\Console\Installer.php;f18;187;5;207;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSecuritySaltInFile($dir, $io, $newKey, $file)&#10;&#10;Description&#10;     Set the security.salt value in a given file&#10;&#10;Parameters:&#10;    string $dir - The application&apos;s root directory&#10;    \Composer\IO\IOInterface $io - IO interface to write to console&#10;    string $newKey - key to set in the file&#10;    string $file - A path to a file relative to the application&apos;s root;;d4,188;;b1,5;;mstring $dir;;p\Composer\IO\IOInterface $io;;pstring $newKey;;pstring $file;;p">
</treenode>
</treenode>
<treenode node="PagesController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\PagesController.php;f0;28;1;68;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class PagesController extends AppController&#10;&#10;Description&#10;     Static content controller;;d0,29;;b0,0;;m">
<treenode node="display;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\PagesController.php;f11;40;5;67;;;;vpos;;v;;r&#10;Definition&#10;    display(...$path)&#10;&#10;Description&#10;     Displays a view&#10;&#10;Parameters:&#10;    array - ...$path Path segments.;;d4,41;;b1,0;;marray;;p">
</treenode>
</treenode>
<treenode node="Partnership;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Entity\Partnership.php;f0;17;1;37;;;;vpos;;vEntity;;c;;r&#10;Definition&#10;    class Partnership extends Entity&#10;&#10;Description&#10;     Partnership Entity;;d0,18;;b0,0;;m">
</treenode>
<treenode node="PartnershipsController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\Admin\PartnershipsController.php;f0;12;1;115;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class PartnershipsController extends AppController&#10;&#10;Description&#10;     Partnerships Controller;;d0,13;;b0,0;;m">
<treenode node="add;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PartnershipsController.php;f11;53;5;68;;;;vpos;;v;;r&#10;Definition&#10;    add()&#10;&#10;Description&#10;     Add method;;d4,54;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PartnershipsController.php;f11;103;5;114;;;;vpos;;v;;r&#10;Definition&#10;    delete($id = null)&#10;&#10;Description&#10;     Delete method&#10;&#10;Parameters:&#10;    string|null $id - Partnership id;;d4,104;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="edit;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PartnershipsController.php;f11;77;5;94;;;;vpos;;v;;r&#10;Definition&#10;    edit($id = null)&#10;&#10;Description&#10;     Edit method&#10;&#10;Parameters:&#10;    string|null $id - Partnership id;;d4,78;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="index;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PartnershipsController.php;f11;20;5;29;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Index method;;d4,21;;b1,0;;m">
</treenode>
<treenode node="view;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PartnershipsController.php;f11;38;5;46;;;;vpos;;v;;r&#10;Definition&#10;    view($id = null)&#10;&#10;Description&#10;     View method&#10;&#10;Parameters:&#10;    string|null $id - Partnership id;;d4,39;;b1,0;;mstring|null $id;;p">
</treenode>
</treenode>
<treenode node="PartnershipsTable;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Table\PartnershipsTable.php;f0;22;1;87;;;;vpos;;vTable;;c;;r&#10;Definition&#10;    class PartnershipsTable extends Table&#10;&#10;Description&#10;     Partnerships Model;;d0,23;;b0,0;;m">
<treenode node="buildRules;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\PartnershipsTable.php;f11;81;5;86;;;;vpos;;v;;r&#10;Definition&#10;    buildRules(RulesChecker $rules)&#10;&#10;Description&#10;     Returns a rules checker object that will be used for validating application integrity.&#10;&#10;Parameters:&#10;    \Cake\ORM\RulesChecker $rules - The rules object to be modified;;d4,82;;b1,0;;m\Cake\ORM\RulesChecker $rules;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\PartnershipsTable.php;f11;31;5;45;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize(array $config)&#10;&#10;Description&#10;     Initialize method&#10;&#10;Parameters:&#10;    array $config - The configuration for the Table;;d4,32;;b1,0;;marray $config;;p">
</treenode>
<treenode node="validationDefault;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\PartnershipsTable.php;f11;53;5;72;;;;vpos;;v;;r&#10;Definition&#10;    validationDefault(Validator $validator)&#10;&#10;Description&#10;     Default validation rules.&#10;&#10;Parameters:&#10;    \Cake\Validation\Validator $validator - Validator instance;;d4,54;;b1,0;;m\Cake\Validation\Validator $validator;;p">
</treenode>
</treenode>
<treenode node="Pay;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Entity\Pay.php;f0;13;1;29;;;;vpos;;vEntity;;c;;r&#10;Definition&#10;    class Pay extends Entity&#10;&#10;Description&#10;     Pay Entity;;d0,14;;b0,0;;m">
</treenode>
<treenode node="PaysController;PHP:Class Name;G:\wamp\sites\partnerships\src\Controller\Admin\PaysController.php;f0;12;1;110;;;;vpos;;vAppController;;c;;r&#10;Definition&#10;    class PaysController extends AppController&#10;&#10;Description&#10;     Pays Controller;;d0,13;;b0,0;;m">
<treenode node="add;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PaysController.php;f11;50;5;64;;;;vpos;;v;;r&#10;Definition&#10;    add()&#10;&#10;Description&#10;     Add method;;d4,51;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PaysController.php;f11;98;5;109;;;;vpos;;v;;r&#10;Definition&#10;    delete($id = null)&#10;&#10;Description&#10;     Delete method&#10;&#10;Parameters:&#10;    string|null $id - Pay id;;d4,99;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="edit;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PaysController.php;f11;73;5;89;;;;vpos;;v;;r&#10;Definition&#10;    edit($id = null)&#10;&#10;Description&#10;     Edit method&#10;&#10;Parameters:&#10;    string|null $id - Pay id;;d4,74;;b1,0;;mstring|null $id;;p">
</treenode>
<treenode node="index;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PaysController.php;f11;20;5;26;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Index method;;d4,21;;b1,0;;m">
</treenode>
<treenode node="view;PHP:Function Name;G:\wamp\sites\partnerships\src\Controller\Admin\PaysController.php;f11;35;5;43;;;;vpos;;v;;r&#10;Definition&#10;    view($id = null)&#10;&#10;Description&#10;     View method&#10;&#10;Parameters:&#10;    string|null $id - Pay id;;d4,36;;b1,0;;mstring|null $id;;p">
</treenode>
</treenode>
<treenode node="PaysTable;PHP:Class Name;G:\wamp\sites\partnerships\src\Model\Table\PaysTable.php;f0;21;1;61;;;;vpos;;vTable;;c;;r&#10;Definition&#10;    class PaysTable extends Table&#10;&#10;Description&#10;     Pays Model;;d0,22;;b0,0;;m">
<treenode node="initialize;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\PaysTable.php;f11;30;5;41;;;;vpos;;vvoid;;r&#10;Definition&#10;    initialize(array $config)&#10;&#10;Description&#10;     Initialize method&#10;&#10;Parameters:&#10;    array $config - The configuration for the Table;;d4,31;;b1,0;;marray $config;;p">
</treenode>
<treenode node="validationDefault;PHP:Function Name;G:\wamp\sites\partnerships\src\Model\Table\PaysTable.php;f11;49;5;60;;;;vpos;;v;;r&#10;Definition&#10;    validationDefault(Validator $validator)&#10;&#10;Description&#10;     Default validation rules.&#10;&#10;Parameters:&#10;    \Cake\Validation\Validator $validator - Validator instance;;d4,50;;b1,0;;m\Cake\Validation\Validator $validator;;p">
</treenode>
</treenode>
</phptree>
</codestructure>